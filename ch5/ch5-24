1. 2020-12-09 오후 10시 13분 시청
	새롭게 알게 된 점 :
	1) equals()는 1차원 배열을 확인할 때 썼다.
				2차원은????
		deepEquals(a, b) (deep을 붙여주면 된다.)
		
	2) 마찬가지로 toString() String으로 형변환 시켜주는 방법도 마찬가지이다.
		int[] arr = {0,1,2,3,4};
		System.out.println(Arrays.toString(arr));
		
		결과 : [0,1,2,3,4]
		
		만약 2차원 배열이라면 똑같이하고... Arrays.deepToString(arr)으로 바꿔주면 된다.
		
	3) copyOf(arr)는 arr배열을 복사
	   copyOfRange(arr, x, y)은 arr배열을 x부터 y까지 복사한다.
	   
	   ex)  int[] arr = {0,1,2,3};
	   		int[] arr2 = Arrays.copyOf(arr)    ->   arr2 = [0,1,2,3]
	   		int[] arr3 = Arrays.copyOf(arr, 3) ->   arr3 = [0,1,2]    (이전 챕터와 마찬가지로 범위 끝 숫자는 안들어간다)
	   		int[] arr4 = Arrays.copyOf(arr, 6) ->   arr4 = [0,1,2,3,0,0]  (길이가 4인데 6이면 나머지 5랑 6은 0으로 초기화값을 넣어준다)
	   		int[] arr5 = Arrays.copyOfRange(arr, 1, 3)   ->  arr5 = [1,2] (마찬가지로 from~to에서 to 부분은 안들어간다.)
	   		int[] arr6 = Arrays.copyOfRange(arr, 2, 6)   ->  arr6 = [2,3,0,0,0,0] (원래 배열보다 길이가 초과되었다면 나머지는 모두 초기값 0으로 넣어준다)
	   		int[] arr7 = Arrays.copyOfRange(arr, 2)   ->  arr7 = [1,2,3] (from~to인데 to가 없으면 알아서 arr 배열의 끝까지 입력한다)
	   		
	 4) Arrays.sort
	 	백준에서 시간 초과가 되는 오름차순 정렬법
	 	바로 System.out.println(Arrays.sort(arr))하면 오류난다.